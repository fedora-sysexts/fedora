name := "libvirtd"
packages := "
guestfs-tools
libguestfs
libguestfs-xfs
libvirt-client
libvirt-daemon
libvirt-daemon-config-network
libvirt-daemon-driver-interface
libvirt-daemon-driver-network
libvirt-daemon-driver-nodedev
libvirt-daemon-driver-nwfilter
libvirt-daemon-driver-qemu
libvirt-daemon-driver-secret
libvirt-daemon-driver-storage-core
libvirt-daemon-driver-storage-disk
libvirt-daemon-driver-storage-iscsi
libvirt-daemon-driver-storage-iscsi-direct
libvirt-daemon-driver-storage-logical
libvirt-daemon-driver-storage-mpath
libvirt-daemon-driver-storage-rbd
libvirt-daemon-driver-storage-scsi
libvirt-dbus
netcat
qemu-img
qemu-kvm
swtpm
virt-install
"
upholds := "
virtlockd-admin.socket
virtlockd.socket
virtlogd-admin.socket
virtlogd.socket
virtnetworkd-admin.socket
virtnetworkd-ro.socket
virtnetworkd.socket
virtqemud-admin.socket
virtqemud-ro.socket
virtqemud.socket
virtstoraged-admin.socket
virtstoraged-ro.socket
virtstoraged.socket
"
version_package := "libvirt-client"
base_images := "
quay.io/fedora/fedora-coreos:stable x86_64,aarch64
quay.io/fedora/fedora-coreos:next x86_64,aarch64
"
# Pending nfs-utils packaging rework
pre_commands := "dnf remove -y nfs-utils-coreos"

import '../sysext.just'

all: default

install-manual:
    #!/bin/bash
    set -euo pipefail
    if [[ -n "{{debug}}" ]]; then
      set -x
    fi

    if [[ "${UID}" == "0" ]]; then
        SUDO=""
    else
        SUDO="sudo"
    fi

    cd rootfs

    # Fixup netcat/nc as we don't run the alternatives command from scriplets
    ${SUDO} ln -snf netcat usr/bin/nc

    # Move extlinux to /usr/bin as needed
    if [[ -f sbin/extlinux ]]; then
        ${SUDO} mv sbin/extlinux usr/bin/extlinux
        ${SUDO} rmdir sbin
    fi

    # Empty out /var & /boot
    ${SUDO} rm -rf ./var ./boot
