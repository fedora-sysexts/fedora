name: "Build sysexts: Fedora CoreOS (next)"

env:
  IMAGE: 'quay.io/fedora/fedora-coreos:next'
  RELEASE: 'next'
  NAME: 'Fedora CoreOS (next)'
  SHORTNAME: 'fedora-coreos'
  GH_TOKEN: ${{ github.token }}

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  schedule:
    - cron:  '0 0 * * MON'
  workflow_dispatch:

# Needed to allow creating a release
permissions:
  contents: write

# Prevent multiple workflow runs from racing to ensure that pushes are made
# sequentialy for the main branch. Also cancel in progress workflow runs for
# pull requests only.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-${{ inputs.sysext }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build:
    runs-on: "ubuntu-24.04"
    container:
      image: "quay.io/fedora/fedora:41"
      options: "--privileged --security-opt label=disable --user 0:0"
    steps:
      - name: "Install tools"
        run: |
          dnf install -y \
            cpio \
            dnf5-plugins \
            erofs-utils \
            git \
            jq \
            just \
            podman \
            wget
          dnf config-manager addrepo --from-repofile="https://cli.github.com/packages/rpm/gh-cli.repo"
          dnf install -y gh --repo gh-cli

      - name: "Checkout repo"
        uses: actions/checkout@v4

      - name: "Setup artifacts directory"
        run: |
          mkdir -p artifacts

      - name: "Build sysext: btop"
        env:
          SYSEXT: btop
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}.raw" "../artifacts/"

      - name: "Build sysext: compsize"
        env:
          SYSEXT: compsize
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}.raw" "../artifacts/"

      - name: "Build sysext: distrobox"
        env:
          SYSEXT: distrobox
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}.raw" "../artifacts/"

      - name: "Build sysext: gdb"
        env:
          SYSEXT: gdb
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}.raw" "../artifacts/"

      - name: "Build sysext: git-tools"
        env:
          SYSEXT: git-tools
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}.raw" "../artifacts/"

      - name: "Build sysext: htop"
        env:
          SYSEXT: htop
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}.raw" "../artifacts/"

      - name: "Build sysext: incus"
        env:
          SYSEXT: incus
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}.raw" "../artifacts/"

      - name: "Build sysext: iwd"
        env:
          SYSEXT: iwd
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}.raw" "../artifacts/"

      - name: "Build sysext: just"
        env:
          SYSEXT: just
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}.raw" "../artifacts/"

      - name: "Build sysext: libvirtd"
        env:
          SYSEXT: libvirtd
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}.raw" "../artifacts/"

      - name: "Build sysext: monitoring"
        env:
          SYSEXT: monitoring
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}.raw" "../artifacts/"

      - name: "Build sysext: python"
        env:
          SYSEXT: python
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}.raw" "../artifacts/"

      - name: "Build sysext: ripgrep"
        env:
          SYSEXT: ripgrep
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}.raw" "../artifacts/"

      - name: "Build sysext: semanage"
        env:
          SYSEXT: semanage
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}.raw" "../artifacts/"

      - name: "Build sysext: strace"
        env:
          SYSEXT: strace
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}.raw" "../artifacts/"

      - name: "Build sysext: tree"
        env:
          SYSEXT: tree
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}.raw" "../artifacts/"

      - name: "Build sysext: zsh"
        env:
          SYSEXT: zsh
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}.raw" "../artifacts/"

      - name: Upload sysexts as artifacts
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: sysexts
          path: artifacts/
          retention-days: 5
          compression-level: 0
          overwrite: true

      - name: Create a release
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          sysexts=()
          for s in $(ls ./artifacts/*.raw); do
            sysexts+=("${s}")
          done
          git config --global --add safe.directory "${PWD}"
          gh release delete \
            --cleanup-tag \
            --yes \
            "${SHORTNAME}-${RELEASE}" \
            || true
          # TODO: Handle --latest
          gh release create \
            --title "${NAME} sysexts" \
            --notes "System extensions for ${NAME}" \
            "${SHORTNAME}-${RELEASE}" \
            "${sysexts[@]}"
