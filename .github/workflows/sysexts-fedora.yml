# SPDX-FileCopyrightText: Timoth√©e Ravier <tim@siosm.fr>
# SPDX-License-Identifier: CC0-1.0

name: "Build sysexts for Fedora"

env:
  GH_TOKEN: ${{ github.token }}
  RELEASEURL: "https://github.com/${{ github.repository }}/releases/download"

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"
  schedule:
    - cron:  '0 0 * * *'
  workflow_dispatch:
    inputs:
      force-rebuild:
        description: 'Force rebuild of all sysexts'
        required: true
        default: false
        type: boolean

# Needed to allow creating a release
permissions:
  contents: write

# Prevent multiple workflow runs from racing to ensure that pushes are made
# sequentialy for the main branch. Also cancel in progress workflow runs.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build-fedora-41-x86_64:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/base-atomic:41"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: adobe-source-code-pro-fonts"
        uses: ./.github/actions/build
        with:
          sysext: 'adobe-source-code-pro-fonts'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: arm-image-installer"
        uses: ./.github/actions/build
        with:
          sysext: 'arm-image-installer'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: btop"
        uses: ./.github/actions/build
        with:
          sysext: 'btop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: bwm-ng"
        uses: ./.github/actions/build
        with:
          sysext: 'bwm-ng'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: chromium"
        uses: ./.github/actions/build
        with:
          sysext: 'chromium'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: distrobox"
        uses: ./.github/actions/build
        with:
          sysext: 'distrobox'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: emacs"
        uses: ./.github/actions/build
        with:
          sysext: 'emacs'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: erofs-utils"
        uses: ./.github/actions/build
        with:
          sysext: 'erofs-utils'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fastfetch"
        uses: ./.github/actions/build
        with:
          sysext: 'fastfetch'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fd-find"
        uses: ./.github/actions/build
        with:
          sysext: 'fd-find'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: firefox"
        uses: ./.github/actions/build
        with:
          sysext: 'firefox'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fish"
        uses: ./.github/actions/build
        with:
          sysext: 'fish'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: foot"
        uses: ./.github/actions/build
        with:
          sysext: 'foot'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fuse2"
        uses: ./.github/actions/build
        with:
          sysext: 'fuse2'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: gh"
        uses: ./.github/actions/build
        with:
          sysext: 'gh'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-absorb"
        uses: ./.github/actions/build
        with:
          sysext: 'git-absorb'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-delta"
        uses: ./.github/actions/build
        with:
          sysext: 'git-delta'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-email"
        uses: ./.github/actions/build
        with:
          sysext: 'git-email'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-lfs"
        uses: ./.github/actions/build
        with:
          sysext: 'git-lfs'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: helix"
        uses: ./.github/actions/build
        with:
          sysext: 'helix'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: htop"
        uses: ./.github/actions/build
        with:
          sysext: 'htop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: igt-gpu-tools"
        uses: ./.github/actions/build
        with:
          sysext: 'igt-gpu-tools'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: inxi"
        uses: ./.github/actions/build
        with:
          sysext: 'inxi'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: iotop"
        uses: ./.github/actions/build
        with:
          sysext: 'iotop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: iwd"
        uses: ./.github/actions/build
        with:
          sysext: 'iwd'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: just"
        uses: ./.github/actions/build
        with:
          sysext: 'just'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: keepassxc"
        uses: ./.github/actions/build
        with:
          sysext: 'keepassxc'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kitty"
        uses: ./.github/actions/build
        with:
          sysext: 'kitty'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: krb5-workstation"
        uses: ./.github/actions/build
        with:
          sysext: 'krb5-workstation'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: libratbag"
        uses: ./.github/actions/build
        with:
          sysext: 'libratbag'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: libvirtd-desktop"
        uses: ./.github/actions/build
        with:
          sysext: 'libvirtd-desktop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: moby-engine"
        uses: ./.github/actions/build
        with:
          sysext: 'moby-engine'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: mosh"
        uses: ./.github/actions/build
        with:
          sysext: 'mosh'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: nebula"
        uses: ./.github/actions/build
        with:
          sysext: 'nebula'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: neovim"
        uses: ./.github/actions/build
        with:
          sysext: 'neovim'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: openssl"
        uses: ./.github/actions/build
        with:
          sysext: 'openssl'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: qutebrowser"
        uses: ./.github/actions/build
        with:
          sysext: 'qutebrowser'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: ripgrep"
        uses: ./.github/actions/build
        with:
          sysext: 'ripgrep'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: source-foundry-hack-fonts"
        uses: ./.github/actions/build
        with:
          sysext: 'source-foundry-hack-fonts'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: steam-devices"
        uses: ./.github/actions/build
        with:
          sysext: 'steam-devices'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: strace"
        uses: ./.github/actions/build
        with:
          sysext: 'strace'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: tmux"
        uses: ./.github/actions/build
        with:
          sysext: 'tmux'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: tree"
        uses: ./.github/actions/build
        with:
          sysext: 'tree'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vim"
        uses: ./.github/actions/build
        with:
          sysext: 'vim'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: wireguard-tools"
        uses: ./.github/actions/build
        with:
          sysext: 'wireguard-tools'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: zoxide"
        uses: ./.github/actions/build
        with:
          sysext: 'zoxide'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: zsh"
        uses: ./.github/actions/build
        with:
          sysext: 'zsh'
          image: ${{ env.IMAGE }}

  build-fedora-42-x86_64:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/base-atomic:42"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: adobe-source-code-pro-fonts"
        uses: ./.github/actions/build
        with:
          sysext: 'adobe-source-code-pro-fonts'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: arm-image-installer"
        uses: ./.github/actions/build
        with:
          sysext: 'arm-image-installer'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: btop"
        uses: ./.github/actions/build
        with:
          sysext: 'btop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: bwm-ng"
        uses: ./.github/actions/build
        with:
          sysext: 'bwm-ng'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: chromium"
        uses: ./.github/actions/build
        with:
          sysext: 'chromium'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: distrobox"
        uses: ./.github/actions/build
        with:
          sysext: 'distrobox'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: emacs"
        uses: ./.github/actions/build
        with:
          sysext: 'emacs'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: erofs-utils"
        uses: ./.github/actions/build
        with:
          sysext: 'erofs-utils'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fastfetch"
        uses: ./.github/actions/build
        with:
          sysext: 'fastfetch'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fd-find"
        uses: ./.github/actions/build
        with:
          sysext: 'fd-find'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: firefox"
        uses: ./.github/actions/build
        with:
          sysext: 'firefox'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fish"
        uses: ./.github/actions/build
        with:
          sysext: 'fish'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: foot"
        uses: ./.github/actions/build
        with:
          sysext: 'foot'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fuse2"
        uses: ./.github/actions/build
        with:
          sysext: 'fuse2'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: gh"
        uses: ./.github/actions/build
        with:
          sysext: 'gh'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-absorb"
        uses: ./.github/actions/build
        with:
          sysext: 'git-absorb'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-delta"
        uses: ./.github/actions/build
        with:
          sysext: 'git-delta'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-email"
        uses: ./.github/actions/build
        with:
          sysext: 'git-email'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-lfs"
        uses: ./.github/actions/build
        with:
          sysext: 'git-lfs'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: helix"
        uses: ./.github/actions/build
        with:
          sysext: 'helix'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: htop"
        uses: ./.github/actions/build
        with:
          sysext: 'htop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: igt-gpu-tools"
        uses: ./.github/actions/build
        with:
          sysext: 'igt-gpu-tools'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: inxi"
        uses: ./.github/actions/build
        with:
          sysext: 'inxi'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: iotop"
        uses: ./.github/actions/build
        with:
          sysext: 'iotop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: iwd"
        uses: ./.github/actions/build
        with:
          sysext: 'iwd'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: just"
        uses: ./.github/actions/build
        with:
          sysext: 'just'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: keepassxc"
        uses: ./.github/actions/build
        with:
          sysext: 'keepassxc'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kitty"
        uses: ./.github/actions/build
        with:
          sysext: 'kitty'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: krb5-workstation"
        uses: ./.github/actions/build
        with:
          sysext: 'krb5-workstation'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: libratbag"
        uses: ./.github/actions/build
        with:
          sysext: 'libratbag'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: libvirtd-desktop"
        uses: ./.github/actions/build
        with:
          sysext: 'libvirtd-desktop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: moby-engine"
        uses: ./.github/actions/build
        with:
          sysext: 'moby-engine'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: mosh"
        uses: ./.github/actions/build
        with:
          sysext: 'mosh'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: nebula"
        uses: ./.github/actions/build
        with:
          sysext: 'nebula'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: neovim"
        uses: ./.github/actions/build
        with:
          sysext: 'neovim'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: openssl"
        uses: ./.github/actions/build
        with:
          sysext: 'openssl'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: qutebrowser"
        uses: ./.github/actions/build
        with:
          sysext: 'qutebrowser'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: ripgrep"
        uses: ./.github/actions/build
        with:
          sysext: 'ripgrep'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: source-foundry-hack-fonts"
        uses: ./.github/actions/build
        with:
          sysext: 'source-foundry-hack-fonts'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: steam-devices"
        uses: ./.github/actions/build
        with:
          sysext: 'steam-devices'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: strace"
        uses: ./.github/actions/build
        with:
          sysext: 'strace'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: tmux"
        uses: ./.github/actions/build
        with:
          sysext: 'tmux'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: tree"
        uses: ./.github/actions/build
        with:
          sysext: 'tree'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vim"
        uses: ./.github/actions/build
        with:
          sysext: 'vim'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: wireguard-tools"
        uses: ./.github/actions/build
        with:
          sysext: 'wireguard-tools'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: zoxide"
        uses: ./.github/actions/build
        with:
          sysext: 'zoxide'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: zsh"
        uses: ./.github/actions/build
        with:
          sysext: 'zsh'
          image: ${{ env.IMAGE }}

  build-fedora-43-x86_64:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/base-atomic:43"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: adobe-source-code-pro-fonts"
        uses: ./.github/actions/build
        with:
          sysext: 'adobe-source-code-pro-fonts'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: arm-image-installer"
        uses: ./.github/actions/build
        with:
          sysext: 'arm-image-installer'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: btop"
        uses: ./.github/actions/build
        with:
          sysext: 'btop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: bwm-ng"
        uses: ./.github/actions/build
        with:
          sysext: 'bwm-ng'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: chromium"
        uses: ./.github/actions/build
        with:
          sysext: 'chromium'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: distrobox"
        uses: ./.github/actions/build
        with:
          sysext: 'distrobox'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: emacs"
        uses: ./.github/actions/build
        with:
          sysext: 'emacs'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: erofs-utils"
        uses: ./.github/actions/build
        with:
          sysext: 'erofs-utils'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fastfetch"
        uses: ./.github/actions/build
        with:
          sysext: 'fastfetch'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fd-find"
        uses: ./.github/actions/build
        with:
          sysext: 'fd-find'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: firefox"
        uses: ./.github/actions/build
        with:
          sysext: 'firefox'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fish"
        uses: ./.github/actions/build
        with:
          sysext: 'fish'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: foot"
        uses: ./.github/actions/build
        with:
          sysext: 'foot'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fuse2"
        uses: ./.github/actions/build
        with:
          sysext: 'fuse2'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: gh"
        uses: ./.github/actions/build
        with:
          sysext: 'gh'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-absorb"
        uses: ./.github/actions/build
        with:
          sysext: 'git-absorb'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-delta"
        uses: ./.github/actions/build
        with:
          sysext: 'git-delta'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-email"
        uses: ./.github/actions/build
        with:
          sysext: 'git-email'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-lfs"
        uses: ./.github/actions/build
        with:
          sysext: 'git-lfs'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: helix"
        uses: ./.github/actions/build
        with:
          sysext: 'helix'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: htop"
        uses: ./.github/actions/build
        with:
          sysext: 'htop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: igt-gpu-tools"
        uses: ./.github/actions/build
        with:
          sysext: 'igt-gpu-tools'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: inxi"
        uses: ./.github/actions/build
        with:
          sysext: 'inxi'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: iotop"
        uses: ./.github/actions/build
        with:
          sysext: 'iotop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: iwd"
        uses: ./.github/actions/build
        with:
          sysext: 'iwd'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: just"
        uses: ./.github/actions/build
        with:
          sysext: 'just'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: keepassxc"
        uses: ./.github/actions/build
        with:
          sysext: 'keepassxc'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kitty"
        uses: ./.github/actions/build
        with:
          sysext: 'kitty'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: krb5-workstation"
        uses: ./.github/actions/build
        with:
          sysext: 'krb5-workstation'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: libratbag"
        uses: ./.github/actions/build
        with:
          sysext: 'libratbag'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: libvirtd-desktop"
        uses: ./.github/actions/build
        with:
          sysext: 'libvirtd-desktop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: moby-engine"
        uses: ./.github/actions/build
        with:
          sysext: 'moby-engine'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: mosh"
        uses: ./.github/actions/build
        with:
          sysext: 'mosh'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: nebula"
        uses: ./.github/actions/build
        with:
          sysext: 'nebula'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: neovim"
        uses: ./.github/actions/build
        with:
          sysext: 'neovim'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: openssl"
        uses: ./.github/actions/build
        with:
          sysext: 'openssl'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: ripgrep"
        uses: ./.github/actions/build
        with:
          sysext: 'ripgrep'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: source-foundry-hack-fonts"
        uses: ./.github/actions/build
        with:
          sysext: 'source-foundry-hack-fonts'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: steam-devices"
        uses: ./.github/actions/build
        with:
          sysext: 'steam-devices'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: strace"
        uses: ./.github/actions/build
        with:
          sysext: 'strace'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: tmux"
        uses: ./.github/actions/build
        with:
          sysext: 'tmux'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: tree"
        uses: ./.github/actions/build
        with:
          sysext: 'tree'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vim"
        uses: ./.github/actions/build
        with:
          sysext: 'vim'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: wireguard-tools"
        uses: ./.github/actions/build
        with:
          sysext: 'wireguard-tools'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: zoxide"
        uses: ./.github/actions/build
        with:
          sysext: 'zoxide'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: zsh"
        uses: ./.github/actions/build
        with:
          sysext: 'zsh'
          image: ${{ env.IMAGE }}

  build-fedora-silverblue-41-x86_64:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/silverblue:41"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: wireshark-silverblue"
        uses: ./.github/actions/build
        with:
          sysext: 'wireshark-silverblue'
          image: ${{ env.IMAGE }}

  build-fedora-silverblue-42-x86_64:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/silverblue:42"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: wireshark-silverblue"
        uses: ./.github/actions/build
        with:
          sysext: 'wireshark-silverblue'
          image: ${{ env.IMAGE }}

  build-fedora-silverblue-43-x86_64:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/silverblue:43"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: wireshark-silverblue"
        uses: ./.github/actions/build
        with:
          sysext: 'wireshark-silverblue'
          image: ${{ env.IMAGE }}

  build-fedora-kinoite-41-x86_64:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/kinoite:41"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: wireshark-kinoite"
        uses: ./.github/actions/build
        with:
          sysext: 'wireshark-kinoite'
          image: ${{ env.IMAGE }}

  build-fedora-kinoite-42-x86_64:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/kinoite:42"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: wireshark-kinoite"
        uses: ./.github/actions/build
        with:
          sysext: 'wireshark-kinoite'
          image: ${{ env.IMAGE }}

  build-fedora-kinoite-43-x86_64:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/kinoite:43"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: wireshark-kinoite"
        uses: ./.github/actions/build
        with:
          sysext: 'wireshark-kinoite'
          image: ${{ env.IMAGE }}

  build-fedora-coreos-stable-x86_64:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora/fedora-coreos:stable"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: WALinuxAgent"
        uses: ./.github/actions/build
        with:
          sysext: 'WALinuxAgent'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: amazon-ec2-utils"
        uses: ./.github/actions/build
        with:
          sysext: 'amazon-ec2-utils'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: gdb"
        uses: ./.github/actions/build
        with:
          sysext: 'gdb'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: google-guest-agent"
        uses: ./.github/actions/build
        with:
          sysext: 'google-guest-agent'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-1.31"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-1.31'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-1.32"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-1.32'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-1.33"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-1.33'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-1.34"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-1.34'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-cri-o-1.31"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-cri-o-1.31'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-cri-o-1.32"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-cri-o-1.32'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-cri-o-1.33"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-cri-o-1.33'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-cri-o-1.34"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-cri-o-1.34'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: libvirtd"
        uses: ./.github/actions/build
        with:
          sysext: 'libvirtd'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: python3"
        uses: ./.github/actions/build
        with:
          sysext: 'python3'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: qemu-guest-agent"
        uses: ./.github/actions/build
        with:
          sysext: 'qemu-guest-agent'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: semanage"
        uses: ./.github/actions/build
        with:
          sysext: 'semanage'
          image: ${{ env.IMAGE }}

  build-fedora-coreos-next-x86_64:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora/fedora-coreos:next"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: WALinuxAgent"
        uses: ./.github/actions/build
        with:
          sysext: 'WALinuxAgent'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: amazon-ec2-utils"
        uses: ./.github/actions/build
        with:
          sysext: 'amazon-ec2-utils'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: gdb"
        uses: ./.github/actions/build
        with:
          sysext: 'gdb'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: google-guest-agent"
        uses: ./.github/actions/build
        with:
          sysext: 'google-guest-agent'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-1.31"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-1.31'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-1.32"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-1.32'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-1.33"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-1.33'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-1.34"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-1.34'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-cri-o-1.31"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-cri-o-1.31'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-cri-o-1.32"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-cri-o-1.32'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-cri-o-1.33"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-cri-o-1.33'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-cri-o-1.34"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-cri-o-1.34'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: libvirtd"
        uses: ./.github/actions/build
        with:
          sysext: 'libvirtd'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: python3"
        uses: ./.github/actions/build
        with:
          sysext: 'python3'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: qemu-guest-agent"
        uses: ./.github/actions/build
        with:
          sysext: 'qemu-guest-agent'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: semanage"
        uses: ./.github/actions/build
        with:
          sysext: 'semanage'
          image: ${{ env.IMAGE }}

  build-fedora-41-aarch64:
    runs-on: "ubuntu-24.04-arm"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/base-atomic:41"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: adobe-source-code-pro-fonts"
        uses: ./.github/actions/build
        with:
          sysext: 'adobe-source-code-pro-fonts'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: arm-image-installer"
        uses: ./.github/actions/build
        with:
          sysext: 'arm-image-installer'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: btop"
        uses: ./.github/actions/build
        with:
          sysext: 'btop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: bwm-ng"
        uses: ./.github/actions/build
        with:
          sysext: 'bwm-ng'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: chromium"
        uses: ./.github/actions/build
        with:
          sysext: 'chromium'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: distrobox"
        uses: ./.github/actions/build
        with:
          sysext: 'distrobox'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: emacs"
        uses: ./.github/actions/build
        with:
          sysext: 'emacs'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: erofs-utils"
        uses: ./.github/actions/build
        with:
          sysext: 'erofs-utils'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fastfetch"
        uses: ./.github/actions/build
        with:
          sysext: 'fastfetch'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fd-find"
        uses: ./.github/actions/build
        with:
          sysext: 'fd-find'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: firefox"
        uses: ./.github/actions/build
        with:
          sysext: 'firefox'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fish"
        uses: ./.github/actions/build
        with:
          sysext: 'fish'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: foot"
        uses: ./.github/actions/build
        with:
          sysext: 'foot'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fuse2"
        uses: ./.github/actions/build
        with:
          sysext: 'fuse2'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: gh"
        uses: ./.github/actions/build
        with:
          sysext: 'gh'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-absorb"
        uses: ./.github/actions/build
        with:
          sysext: 'git-absorb'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-delta"
        uses: ./.github/actions/build
        with:
          sysext: 'git-delta'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-email"
        uses: ./.github/actions/build
        with:
          sysext: 'git-email'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-lfs"
        uses: ./.github/actions/build
        with:
          sysext: 'git-lfs'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: helix"
        uses: ./.github/actions/build
        with:
          sysext: 'helix'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: htop"
        uses: ./.github/actions/build
        with:
          sysext: 'htop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: igt-gpu-tools"
        uses: ./.github/actions/build
        with:
          sysext: 'igt-gpu-tools'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: inxi"
        uses: ./.github/actions/build
        with:
          sysext: 'inxi'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: iotop"
        uses: ./.github/actions/build
        with:
          sysext: 'iotop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: iwd"
        uses: ./.github/actions/build
        with:
          sysext: 'iwd'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: just"
        uses: ./.github/actions/build
        with:
          sysext: 'just'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: keepassxc"
        uses: ./.github/actions/build
        with:
          sysext: 'keepassxc'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kitty"
        uses: ./.github/actions/build
        with:
          sysext: 'kitty'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: krb5-workstation"
        uses: ./.github/actions/build
        with:
          sysext: 'krb5-workstation'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: libratbag"
        uses: ./.github/actions/build
        with:
          sysext: 'libratbag'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: libvirtd-desktop"
        uses: ./.github/actions/build
        with:
          sysext: 'libvirtd-desktop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: moby-engine"
        uses: ./.github/actions/build
        with:
          sysext: 'moby-engine'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: mosh"
        uses: ./.github/actions/build
        with:
          sysext: 'mosh'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: nebula"
        uses: ./.github/actions/build
        with:
          sysext: 'nebula'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: neovim"
        uses: ./.github/actions/build
        with:
          sysext: 'neovim'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: openssl"
        uses: ./.github/actions/build
        with:
          sysext: 'openssl'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: ripgrep"
        uses: ./.github/actions/build
        with:
          sysext: 'ripgrep'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: source-foundry-hack-fonts"
        uses: ./.github/actions/build
        with:
          sysext: 'source-foundry-hack-fonts'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: steam-devices"
        uses: ./.github/actions/build
        with:
          sysext: 'steam-devices'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: strace"
        uses: ./.github/actions/build
        with:
          sysext: 'strace'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: tmux"
        uses: ./.github/actions/build
        with:
          sysext: 'tmux'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: tree"
        uses: ./.github/actions/build
        with:
          sysext: 'tree'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vim"
        uses: ./.github/actions/build
        with:
          sysext: 'vim'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: wireguard-tools"
        uses: ./.github/actions/build
        with:
          sysext: 'wireguard-tools'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: zoxide"
        uses: ./.github/actions/build
        with:
          sysext: 'zoxide'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: zsh"
        uses: ./.github/actions/build
        with:
          sysext: 'zsh'
          image: ${{ env.IMAGE }}

  build-fedora-42-aarch64:
    runs-on: "ubuntu-24.04-arm"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/base-atomic:42"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: adobe-source-code-pro-fonts"
        uses: ./.github/actions/build
        with:
          sysext: 'adobe-source-code-pro-fonts'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: arm-image-installer"
        uses: ./.github/actions/build
        with:
          sysext: 'arm-image-installer'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: btop"
        uses: ./.github/actions/build
        with:
          sysext: 'btop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: bwm-ng"
        uses: ./.github/actions/build
        with:
          sysext: 'bwm-ng'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: chromium"
        uses: ./.github/actions/build
        with:
          sysext: 'chromium'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: distrobox"
        uses: ./.github/actions/build
        with:
          sysext: 'distrobox'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: emacs"
        uses: ./.github/actions/build
        with:
          sysext: 'emacs'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: erofs-utils"
        uses: ./.github/actions/build
        with:
          sysext: 'erofs-utils'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fastfetch"
        uses: ./.github/actions/build
        with:
          sysext: 'fastfetch'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fd-find"
        uses: ./.github/actions/build
        with:
          sysext: 'fd-find'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: firefox"
        uses: ./.github/actions/build
        with:
          sysext: 'firefox'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fish"
        uses: ./.github/actions/build
        with:
          sysext: 'fish'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: foot"
        uses: ./.github/actions/build
        with:
          sysext: 'foot'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fuse2"
        uses: ./.github/actions/build
        with:
          sysext: 'fuse2'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: gh"
        uses: ./.github/actions/build
        with:
          sysext: 'gh'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-absorb"
        uses: ./.github/actions/build
        with:
          sysext: 'git-absorb'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-delta"
        uses: ./.github/actions/build
        with:
          sysext: 'git-delta'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-email"
        uses: ./.github/actions/build
        with:
          sysext: 'git-email'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-lfs"
        uses: ./.github/actions/build
        with:
          sysext: 'git-lfs'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: helix"
        uses: ./.github/actions/build
        with:
          sysext: 'helix'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: htop"
        uses: ./.github/actions/build
        with:
          sysext: 'htop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: igt-gpu-tools"
        uses: ./.github/actions/build
        with:
          sysext: 'igt-gpu-tools'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: inxi"
        uses: ./.github/actions/build
        with:
          sysext: 'inxi'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: iotop"
        uses: ./.github/actions/build
        with:
          sysext: 'iotop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: iwd"
        uses: ./.github/actions/build
        with:
          sysext: 'iwd'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: just"
        uses: ./.github/actions/build
        with:
          sysext: 'just'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: keepassxc"
        uses: ./.github/actions/build
        with:
          sysext: 'keepassxc'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kitty"
        uses: ./.github/actions/build
        with:
          sysext: 'kitty'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: krb5-workstation"
        uses: ./.github/actions/build
        with:
          sysext: 'krb5-workstation'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: libratbag"
        uses: ./.github/actions/build
        with:
          sysext: 'libratbag'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: libvirtd-desktop"
        uses: ./.github/actions/build
        with:
          sysext: 'libvirtd-desktop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: moby-engine"
        uses: ./.github/actions/build
        with:
          sysext: 'moby-engine'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: mosh"
        uses: ./.github/actions/build
        with:
          sysext: 'mosh'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: nebula"
        uses: ./.github/actions/build
        with:
          sysext: 'nebula'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: neovim"
        uses: ./.github/actions/build
        with:
          sysext: 'neovim'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: openssl"
        uses: ./.github/actions/build
        with:
          sysext: 'openssl'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: ripgrep"
        uses: ./.github/actions/build
        with:
          sysext: 'ripgrep'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: source-foundry-hack-fonts"
        uses: ./.github/actions/build
        with:
          sysext: 'source-foundry-hack-fonts'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: steam-devices"
        uses: ./.github/actions/build
        with:
          sysext: 'steam-devices'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: strace"
        uses: ./.github/actions/build
        with:
          sysext: 'strace'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: tmux"
        uses: ./.github/actions/build
        with:
          sysext: 'tmux'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: tree"
        uses: ./.github/actions/build
        with:
          sysext: 'tree'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vim"
        uses: ./.github/actions/build
        with:
          sysext: 'vim'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: wireguard-tools"
        uses: ./.github/actions/build
        with:
          sysext: 'wireguard-tools'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: zoxide"
        uses: ./.github/actions/build
        with:
          sysext: 'zoxide'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: zsh"
        uses: ./.github/actions/build
        with:
          sysext: 'zsh'
          image: ${{ env.IMAGE }}

  build-fedora-43-aarch64:
    runs-on: "ubuntu-24.04-arm"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/base-atomic:43"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: adobe-source-code-pro-fonts"
        uses: ./.github/actions/build
        with:
          sysext: 'adobe-source-code-pro-fonts'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: arm-image-installer"
        uses: ./.github/actions/build
        with:
          sysext: 'arm-image-installer'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: btop"
        uses: ./.github/actions/build
        with:
          sysext: 'btop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: bwm-ng"
        uses: ./.github/actions/build
        with:
          sysext: 'bwm-ng'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: chromium"
        uses: ./.github/actions/build
        with:
          sysext: 'chromium'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: distrobox"
        uses: ./.github/actions/build
        with:
          sysext: 'distrobox'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: emacs"
        uses: ./.github/actions/build
        with:
          sysext: 'emacs'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: erofs-utils"
        uses: ./.github/actions/build
        with:
          sysext: 'erofs-utils'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fastfetch"
        uses: ./.github/actions/build
        with:
          sysext: 'fastfetch'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fd-find"
        uses: ./.github/actions/build
        with:
          sysext: 'fd-find'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: firefox"
        uses: ./.github/actions/build
        with:
          sysext: 'firefox'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fish"
        uses: ./.github/actions/build
        with:
          sysext: 'fish'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: foot"
        uses: ./.github/actions/build
        with:
          sysext: 'foot'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: fuse2"
        uses: ./.github/actions/build
        with:
          sysext: 'fuse2'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: gh"
        uses: ./.github/actions/build
        with:
          sysext: 'gh'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-absorb"
        uses: ./.github/actions/build
        with:
          sysext: 'git-absorb'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-delta"
        uses: ./.github/actions/build
        with:
          sysext: 'git-delta'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-email"
        uses: ./.github/actions/build
        with:
          sysext: 'git-email'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: git-lfs"
        uses: ./.github/actions/build
        with:
          sysext: 'git-lfs'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: helix"
        uses: ./.github/actions/build
        with:
          sysext: 'helix'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: htop"
        uses: ./.github/actions/build
        with:
          sysext: 'htop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: igt-gpu-tools"
        uses: ./.github/actions/build
        with:
          sysext: 'igt-gpu-tools'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: inxi"
        uses: ./.github/actions/build
        with:
          sysext: 'inxi'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: iotop"
        uses: ./.github/actions/build
        with:
          sysext: 'iotop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: iwd"
        uses: ./.github/actions/build
        with:
          sysext: 'iwd'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: just"
        uses: ./.github/actions/build
        with:
          sysext: 'just'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: keepassxc"
        uses: ./.github/actions/build
        with:
          sysext: 'keepassxc'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kitty"
        uses: ./.github/actions/build
        with:
          sysext: 'kitty'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: krb5-workstation"
        uses: ./.github/actions/build
        with:
          sysext: 'krb5-workstation'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: libratbag"
        uses: ./.github/actions/build
        with:
          sysext: 'libratbag'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: libvirtd-desktop"
        uses: ./.github/actions/build
        with:
          sysext: 'libvirtd-desktop'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: moby-engine"
        uses: ./.github/actions/build
        with:
          sysext: 'moby-engine'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: mosh"
        uses: ./.github/actions/build
        with:
          sysext: 'mosh'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: nebula"
        uses: ./.github/actions/build
        with:
          sysext: 'nebula'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: neovim"
        uses: ./.github/actions/build
        with:
          sysext: 'neovim'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: openssl"
        uses: ./.github/actions/build
        with:
          sysext: 'openssl'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: ripgrep"
        uses: ./.github/actions/build
        with:
          sysext: 'ripgrep'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: source-foundry-hack-fonts"
        uses: ./.github/actions/build
        with:
          sysext: 'source-foundry-hack-fonts'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: steam-devices"
        uses: ./.github/actions/build
        with:
          sysext: 'steam-devices'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: strace"
        uses: ./.github/actions/build
        with:
          sysext: 'strace'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: tmux"
        uses: ./.github/actions/build
        with:
          sysext: 'tmux'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: tree"
        uses: ./.github/actions/build
        with:
          sysext: 'tree'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vim"
        uses: ./.github/actions/build
        with:
          sysext: 'vim'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: wireguard-tools"
        uses: ./.github/actions/build
        with:
          sysext: 'wireguard-tools'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: zoxide"
        uses: ./.github/actions/build
        with:
          sysext: 'zoxide'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: zsh"
        uses: ./.github/actions/build
        with:
          sysext: 'zsh'
          image: ${{ env.IMAGE }}

  build-fedora-silverblue-41-aarch64:
    runs-on: "ubuntu-24.04-arm"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/silverblue:41"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: wireshark-silverblue"
        uses: ./.github/actions/build
        with:
          sysext: 'wireshark-silverblue'
          image: ${{ env.IMAGE }}

  build-fedora-silverblue-42-aarch64:
    runs-on: "ubuntu-24.04-arm"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/silverblue:42"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: wireshark-silverblue"
        uses: ./.github/actions/build
        with:
          sysext: 'wireshark-silverblue'
          image: ${{ env.IMAGE }}

  build-fedora-silverblue-43-aarch64:
    runs-on: "ubuntu-24.04-arm"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/silverblue:43"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: wireshark-silverblue"
        uses: ./.github/actions/build
        with:
          sysext: 'wireshark-silverblue'
          image: ${{ env.IMAGE }}

  build-fedora-kinoite-41-aarch64:
    runs-on: "ubuntu-24.04-arm"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/kinoite:41"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: wireshark-kinoite"
        uses: ./.github/actions/build
        with:
          sysext: 'wireshark-kinoite'
          image: ${{ env.IMAGE }}

  build-fedora-kinoite-42-aarch64:
    runs-on: "ubuntu-24.04-arm"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/kinoite:42"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: wireshark-kinoite"
        uses: ./.github/actions/build
        with:
          sysext: 'wireshark-kinoite'
          image: ${{ env.IMAGE }}

  build-fedora-kinoite-43-aarch64:
    runs-on: "ubuntu-24.04-arm"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/kinoite:43"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: wireshark-kinoite"
        uses: ./.github/actions/build
        with:
          sysext: 'wireshark-kinoite'
          image: ${{ env.IMAGE }}

  build-fedora-coreos-stable-aarch64:
    runs-on: "ubuntu-24.04-arm"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora/fedora-coreos:stable"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: WALinuxAgent"
        uses: ./.github/actions/build
        with:
          sysext: 'WALinuxAgent'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: amazon-ec2-utils"
        uses: ./.github/actions/build
        with:
          sysext: 'amazon-ec2-utils'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: gdb"
        uses: ./.github/actions/build
        with:
          sysext: 'gdb'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: google-guest-agent"
        uses: ./.github/actions/build
        with:
          sysext: 'google-guest-agent'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-1.31"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-1.31'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-1.32"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-1.32'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-1.33"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-1.33'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-1.34"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-1.34'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-cri-o-1.31"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-cri-o-1.31'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-cri-o-1.32"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-cri-o-1.32'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-cri-o-1.33"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-cri-o-1.33'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-cri-o-1.34"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-cri-o-1.34'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: libvirtd"
        uses: ./.github/actions/build
        with:
          sysext: 'libvirtd'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: python3"
        uses: ./.github/actions/build
        with:
          sysext: 'python3'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: qemu-guest-agent"
        uses: ./.github/actions/build
        with:
          sysext: 'qemu-guest-agent'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: semanage"
        uses: ./.github/actions/build
        with:
          sysext: 'semanage'
          image: ${{ env.IMAGE }}

  build-fedora-coreos-next-aarch64:
    runs-on: "ubuntu-24.04-arm"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora/fedora-coreos:next"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: WALinuxAgent"
        uses: ./.github/actions/build
        with:
          sysext: 'WALinuxAgent'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: amazon-ec2-utils"
        uses: ./.github/actions/build
        with:
          sysext: 'amazon-ec2-utils'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: gdb"
        uses: ./.github/actions/build
        with:
          sysext: 'gdb'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: google-guest-agent"
        uses: ./.github/actions/build
        with:
          sysext: 'google-guest-agent'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-1.31"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-1.31'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-1.32"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-1.32'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-1.33"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-1.33'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-1.34"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-1.34'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-cri-o-1.31"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-cri-o-1.31'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-cri-o-1.32"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-cri-o-1.32'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-cri-o-1.33"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-cri-o-1.33'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: kubernetes-cri-o-1.34"
        uses: ./.github/actions/build
        with:
          sysext: 'kubernetes-cri-o-1.34'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: libvirtd"
        uses: ./.github/actions/build
        with:
          sysext: 'libvirtd'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: python3"
        uses: ./.github/actions/build
        with:
          sysext: 'python3'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: qemu-guest-agent"
        uses: ./.github/actions/build
        with:
          sysext: 'qemu-guest-agent'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: semanage"
        uses: ./.github/actions/build
        with:
          sysext: 'semanage'
          image: ${{ env.IMAGE }}

  publish-sysexts:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    # Run after the builds and versionned release
    needs:
      - build-fedora-41-x86_64
      - build-fedora-41-aarch64
      - build-fedora-42-x86_64
      - build-fedora-42-aarch64
      - build-fedora-43-x86_64
      - build-fedora-43-aarch64
      - build-fedora-silverblue-41-x86_64
      - build-fedora-silverblue-41-aarch64
      - build-fedora-silverblue-42-x86_64
      - build-fedora-silverblue-42-aarch64
      - build-fedora-silverblue-43-x86_64
      - build-fedora-silverblue-43-aarch64
      - build-fedora-kinoite-41-x86_64
      - build-fedora-kinoite-41-aarch64
      - build-fedora-kinoite-42-x86_64
      - build-fedora-kinoite-42-aarch64
      - build-fedora-kinoite-43-x86_64
      - build-fedora-kinoite-43-aarch64
      - build-fedora-coreos-stable-x86_64
      - build-fedora-coreos-stable-aarch64
      - build-fedora-coreos-next-x86_64
      - build-fedora-coreos-next-aarch64
    # Use `always()` to still run if any dependent job fails
    if: ${{ always() && (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main' }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Gather all sysexts releases"
        uses: ./.github/actions/gather
